import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

@SuppressWarnings("serial")
public class MainWindow extends JFrame implements ActionListener, WindowListener{
	
	private boolean traySupported=true;
	private SysTray tray=null;
	
	public MainWindow(){
		try{
			tray=new SysTray(this);
		}catch(Exception e){
			traySupported=false;
		}
		setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
		addWindowListener(this);
		
		//set window size
		setSize();
		
		//set window position
		setLocation();
		
		
		setVisible(true);
	}
	
	private void setSize(){
		setMinimumSize(new Dimension(400,300));
		int w=400;
		int h=300;
		try{
			w=Integer.parseInt(Settings.getSetting("LAST_WIDTH"));
		}catch(NumberFormatException e){
		}
		try{
			h=Integer.parseInt(Settings.getSetting("LAST_HEIGHT"));
		}catch(NumberFormatException e){
		}
		setSize(w,h);
	}
	private void setLocation(){
		int x=-1;
		int y=-1;
		try{
			x=Integer.parseInt(Settings.getSetting("LAST_XPOS"));
		}catch(NumberFormatException e){
		}
		try{
			y=Integer.parseInt(Settings.getSetting("LAST_YPOS"));
		}catch(NumberFormatException e){
		}
		Dimension screensize=Toolkit.getDefaultToolkit().getScreenSize();
		if(x<0){
			x=((int)screensize.getWidth()/2)-(this.getWidth()/2);
		}
		if((x+this.getWidth())>screensize.getWidth()){
			x=(int)screensize.getWidth()-this.getWidth();
		}
		if(y<0){
			y=((int)screensize.getHeight()/2)-(this.getHeight()/2);
		}
		if((y+this.getHeight())>screensize.getHeight()){
			y=(int)screensize.getHeight()-this.getHeight();
		}
		setLocation(x,y);
	}
	public void toggleWindow(){
		if(isVisible()){
			setVisible(false);
		}else{
			setVisible(true);
		}
		if(traySupported){
			tray.checkWindowVisible();
		}
	}
	public boolean visible(){
		return isVisible();
	}
	public void close(){
		if(JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Exit Encryption Manager?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){
			Settings.addSetting("LAST_WIDTH",""+this.getWidth());
			Settings.addSetting("LAST_HEIGHT", ""+this.getHeight());
			Settings.addSetting("LAST_XPOS", ""+this.getX());
			Settings.addSetting("LAST_YPOS", ""+this.getY());
			if(traySupported){
				tray.dispose();
			}
			this.dispose();
			EncryptionManager.close();
		}
	}

	public void windowActivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
	}
	public void windowClosed(WindowEvent arg0) {
		// TODO Auto-generated method stub
	}
	public void windowClosing(WindowEvent arg0) {
		if(traySupported){
			toggleWindow();
		}else{
			close();
		}
	}
	public void windowDeactivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
	}
	public void windowDeiconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
	}
	public void windowIconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
	}
	public void windowOpened(WindowEvent arg0) {
		// TODO Auto-generated method stub
	}
	
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
	}
}
